#!/bin/bash -l

# This is the setup script for the workstation container. Use it to set the stage for your terraform training, demo, or lab.
set -e

# Allow instruqt time to do its thing
sleep 10

# Create VSC startup script
cat <<-EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/bin/code-server --host 0.0.0.0 --port 8443 --cert --auth none \$(pwd)

[Install]
WantedBy=multi-user.target
EOF

# Start VSC
systemctl enable code-server
systemctl start code-server

# You can do anything! Clone an existing repo, or write some terraform from scratch.

# A few example repos to get you started:
# git clone https://github.com/hashicorp/hashicat-aws
# git clone https://github.com/hashicorp/hashicat-azure
# git clone https://github.com/hashicorp/hashicat-gcp

# Set the user's working directory with the set-workdir script, then in subsequent challenges the user will always start in that directory.
# /bin/set-workdir /root/my-git-repo

# Create a catch-up script that enables the user to fast-forward
cat <<-EOF > /usr/bin/fastforward
#!/bin/bash
echo "******************************************************************"
echo "* Skip to Challenge Configuration Script"
echo "******************************************************************"
echo
echo "This script will set up your Terraform Cloud token and organization"
echo "configuration. Once that is done you may use the 'skip to challenge'"
echo "feature of Instruqt to fast-forward to a particular point in the"
echo "training."
echo
echo "Please enter your Terraform Cloud organization name."
read ORG
echo
echo "Please enter your workspace name."
read WORKSPACE
echo
echo "Please enter your Terraform Cloud user token."
read TOKEN
echo
echo "Please enter your GitHub user name."
read GITUSER
echo
echo "Please enter your oauth-id. You can find it at this URL:"
echo "https://app.terraform.io/app/${ORG}/settings/version-control"
echo "If you haven't set up VCS integration yet, simply hit enter."
read OAUTHID
echo
echo "Organization: \$ORG"
echo "Workspace   : \$WORKSPACE"
echo "Token       : \$TOKEN"
echo "GitHub User : \$GITUSER"
echo "OAuth ID    : \$OAUTHID"
echo
read -p "Do these look right to you? Y/n " -n 1 -r
echo
if [[ ! \$REPLY =~ ^[Yy]\$ ]]
then
  echo "Please try again."
  exit 1
fi
echo
echo "Saving your settings in /root/skipconfig.json"
cat <<-EOM > /root/skipconfig.json
{
  "org": "\$ORG",
  "workspace": "\$WORKSPACE",
  "token": "\$TOKEN",
  "gituser": "\$GITUSER",
  "oauthid": "\$OAUTHID"
}
EOM

ponysay -f twilight -f applejack -f rainbow -f pinkie -f rarity -f fluttershy "Ready to Skip Challenges!"

EOF

chmod +x /usr/bin/fastforward

exit 0
